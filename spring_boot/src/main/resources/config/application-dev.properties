<<<<<<< HEAD
=======
# \u5E94\u7528\u914D\u7F6E
server.port=8089
server.tomcat.uri-encoding=utf-8
name=bb

>>>>>>> master
########################################################
###mysql datasource
########################################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://192.168.0.51:3306/operation_identify
spring.datasource.username=root
spring.datasource.password=ENC(ODQ3QUZBMzBGNjBDMUI0NERDNTAzOTJBRTM1RTI3ODJEQ0QxQzA2NDQwRkFBNkVD|MDE2YWVjOTQxYThiYzc1Y2IwZGMwZTI5MjE5YWM4Yzc=)
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

########################################################
###sqlserver datasource
########################################################
spring.datasource.sqlserver.url=jdbc:sqlserver://192.168.3.89:1433;DatabaseName=AccessData
spring.datasource.sqlserver.username=sa
spring.datasource.sqlserver.password=ENC(REM1MDM5MkFFMzVFMjc4Mjk2MzJCNjA2NzdCM0M2NDg=|NWUzYWJlNjljMmVhN2RjYTc2YWZhYmMzNDI1M2VlN2Y=)
spring.datasource.sqlserver.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver


<<<<<<< HEAD

##mybatis配置文件
#mybatis.config-locations=classpath:config/context/mybatis-config.xml
mybatis.mapper-locations=classpath:com/ipaynow/hr/dao/mybatis/mapping/*.xml
=======
# REDIS (RedisProperties)
# Redis\uFFFD\uFFFD\uFFFD\u077F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u012C\uFFFD\uFFFD\u03AA0\uFFFD\uFFFD
spring.redis.database=1
# Redis\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05B7
spring.redis.host=192.168.0.61
# Redis\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04F6\u02FF\uFFFD
spring.redis.port=6379
# Redis\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uB8E8\u012C\uFFFD\uFFFD\u03AA\uFFFD\u0563\uFFFD
spring.redis.password=ENC(083f03778d0af770e01d763467c94810)
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u02B9\uFFFD\u00F8\uFFFD\u05B5\uFFFD\uFFFD\u02BE\u00FB\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u01A3\uFFFD
spring.redis.pool.max-active=8
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0234\uFFFD\u02B1\uFFFD\u48E8\u02B9\uFFFD\u00F8\uFFFD\u05B5\uFFFD\uFFFD\u02BE\u00FB\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u01A3\uFFFD
spring.redis.pool.max-wait=-1
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\u0435\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
spring.redis.pool.max-idle=8
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\uFFFD\u0435\uFFFD\uFFFD\uFFFD\u0421\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
spring.redis.pool.min-idle=0
# \uFFFD\uFFFD\uFFFD\u04F3\uFFFD\u02B1\u02B1\uFFFD\u48E8\uFFFD\uFFFD\uFFFD\uB8E9
spring.redis.timeout=0

#mybatis \uFFFD\uFFFD\uFFFD\uFFFD
#mybatis.config-location=classpath:mybatis-config.xml
#mybatis.mapper-locations=classpath:com/study/yfz/dao/mapper/*Mapper.xml
>>>>>>> master

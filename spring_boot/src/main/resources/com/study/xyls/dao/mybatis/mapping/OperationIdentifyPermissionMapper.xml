<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.xyls.dao.mybatis.mapper.OperationIdentifyPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.study.xyls.dao.mybatis.domain.OperationIdentifyPermission" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pmsn_name" property="pmsnName" jdbcType="VARCHAR" />
    <result column="pmsn_desc" property="pmsnDesc" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="ignore_login" property="ignoreLogin" jdbcType="INTEGER" />
    <result column="ignore_permission" property="ignorePermission" jdbcType="INTEGER" />
    <result column="permission_level" property="permissionLevel" jdbcType="INTEGER" />
    <result column="permission_group" property="permissionGroup" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pmsn_name, pmsn_desc, enable, parent_id, ignore_login, ignore_permission, permission_level, 
    permission_group
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.study.xyls.dao.mybatis.domain.OperationIdentifyPermissionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_identify_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from operation_identify_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operation_identify_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.study.xyls.dao.mybatis.domain.OperationIdentifyPermissionExample" >
    delete from operation_identify_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study.xyls.dao.mybatis.domain.OperationIdentifyPermission" useGeneratedKeys="true" keyProperty="id" >
    insert into operation_identify_permission (pmsn_name, pmsn_desc, enable, 
      parent_id, ignore_login, ignore_permission, 
      permission_level, permission_group)
    values (#{pmsnName,jdbcType=VARCHAR}, #{pmsnDesc,jdbcType=VARCHAR}, #{enable,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{ignoreLogin,jdbcType=INTEGER}, #{ignorePermission,jdbcType=INTEGER}, 
      #{permissionLevel,jdbcType=INTEGER}, #{permissionGroup,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.study.xyls.dao.mybatis.domain.OperationIdentifyPermission" useGeneratedKeys="true" keyProperty="id" >
    insert into operation_identify_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pmsnName != null" >
        pmsn_name,
      </if>
      <if test="pmsnDesc != null" >
        pmsn_desc,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="ignoreLogin != null" >
        ignore_login,
      </if>
      <if test="ignorePermission != null" >
        ignore_permission,
      </if>
      <if test="permissionLevel != null" >
        permission_level,
      </if>
      <if test="permissionGroup != null" >
        permission_group,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pmsnName != null" >
        #{pmsnName,jdbcType=VARCHAR},
      </if>
      <if test="pmsnDesc != null" >
        #{pmsnDesc,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="ignoreLogin != null" >
        #{ignoreLogin,jdbcType=INTEGER},
      </if>
      <if test="ignorePermission != null" >
        #{ignorePermission,jdbcType=INTEGER},
      </if>
      <if test="permissionLevel != null" >
        #{permissionLevel,jdbcType=INTEGER},
      </if>
      <if test="permissionGroup != null" >
        #{permissionGroup,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study.xyls.dao.mybatis.domain.OperationIdentifyPermissionExample" resultType="java.lang.Integer" >
    select count(*) from operation_identify_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update operation_identify_permission
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pmsnName != null" >
        pmsn_name = #{record.pmsnName,jdbcType=VARCHAR},
      </if>
      <if test="record.pmsnDesc != null" >
        pmsn_desc = #{record.pmsnDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.ignoreLogin != null" >
        ignore_login = #{record.ignoreLogin,jdbcType=INTEGER},
      </if>
      <if test="record.ignorePermission != null" >
        ignore_permission = #{record.ignorePermission,jdbcType=INTEGER},
      </if>
      <if test="record.permissionLevel != null" >
        permission_level = #{record.permissionLevel,jdbcType=INTEGER},
      </if>
      <if test="record.permissionGroup != null" >
        permission_group = #{record.permissionGroup,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update operation_identify_permission
    set id = #{record.id,jdbcType=INTEGER},
      pmsn_name = #{record.pmsnName,jdbcType=VARCHAR},
      pmsn_desc = #{record.pmsnDesc,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      ignore_login = #{record.ignoreLogin,jdbcType=INTEGER},
      ignore_permission = #{record.ignorePermission,jdbcType=INTEGER},
      permission_level = #{record.permissionLevel,jdbcType=INTEGER},
      permission_group = #{record.permissionGroup,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.xyls.dao.mybatis.domain.OperationIdentifyPermission" >
    update operation_identify_permission
    <set >
      <if test="pmsnName != null" >
        pmsn_name = #{pmsnName,jdbcType=VARCHAR},
      </if>
      <if test="pmsnDesc != null" >
        pmsn_desc = #{pmsnDesc,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="ignoreLogin != null" >
        ignore_login = #{ignoreLogin,jdbcType=INTEGER},
      </if>
      <if test="ignorePermission != null" >
        ignore_permission = #{ignorePermission,jdbcType=INTEGER},
      </if>
      <if test="permissionLevel != null" >
        permission_level = #{permissionLevel,jdbcType=INTEGER},
      </if>
      <if test="permissionGroup != null" >
        permission_group = #{permissionGroup,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.xyls.dao.mybatis.domain.OperationIdentifyPermission" >
    update operation_identify_permission
    set pmsn_name = #{pmsnName,jdbcType=VARCHAR},
      pmsn_desc = #{pmsnDesc,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      ignore_login = #{ignoreLogin,jdbcType=INTEGER},
      ignore_permission = #{ignorePermission,jdbcType=INTEGER},
      permission_level = #{permissionLevel,jdbcType=INTEGER},
      permission_group = #{permissionGroup,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
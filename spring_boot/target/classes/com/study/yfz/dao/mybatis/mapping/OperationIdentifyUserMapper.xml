<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.yfz.dao.mybatis.mapper.OperationIdentifyUserMapper" >
  <resultMap id="BaseResultMap" type="com.study.yfz.dao.mybatis.domain.OperationIdentifyUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="usr_cd" property="usrCd" jdbcType="VARCHAR" />
    <result column="usr_nm" property="usrNm" jdbcType="VARCHAR" />
    <result column="usr_pwd" property="usrPwd" jdbcType="VARCHAR" />
    <result column="usr_sex" property="usrSex" jdbcType="INTEGER" />
    <result column="brh_cd" property="brhCd" jdbcType="INTEGER" />
    <result column="dept_cd" property="deptCd" jdbcType="INTEGER" />
    <result column="expired_date" property="expiredDate" jdbcType="DATE" />
    <result column="enable" property="enable" jdbcType="INTEGER" />
    <result column="usr_mob" property="usrMob" jdbcType="VARCHAR" />
    <result column="usr_email" property="usrEmail" jdbcType="VARCHAR" />
    <result column="admin" property="admin" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="login_times" property="loginTimes" jdbcType="INTEGER" />
    <result column="init_pwd" property="initPwd" jdbcType="VARCHAR" />
    <result column="lock_status" property="lockStatus" jdbcType="INTEGER" />
    <result column="last_lock_time" property="lastLockTime" jdbcType="TIMESTAMP" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, usr_cd, usr_nm, usr_pwd, usr_sex, brh_cd, dept_cd, expired_date, enable, usr_mob, 
    usr_email, admin, remark, reg_time, login_time, login_times, init_pwd, lock_status, 
    last_lock_time, open_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.study.yfz.dao.mybatis.domain.OperationIdentifyUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_identify_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from operation_identify_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operation_identify_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.study.yfz.dao.mybatis.domain.OperationIdentifyUserExample" >
    delete from operation_identify_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study.yfz.dao.mybatis.domain.OperationIdentifyUser" useGeneratedKeys="true" keyProperty="id" >
    insert into operation_identify_user (usr_cd, usr_nm, usr_pwd, 
      usr_sex, brh_cd, dept_cd, 
      expired_date, enable, usr_mob, 
      usr_email, admin, remark, 
      reg_time, login_time, login_times, 
      init_pwd, lock_status, last_lock_time, 
      open_id)
    values (#{usrCd,jdbcType=VARCHAR}, #{usrNm,jdbcType=VARCHAR}, #{usrPwd,jdbcType=VARCHAR}, 
      #{usrSex,jdbcType=INTEGER}, #{brhCd,jdbcType=INTEGER}, #{deptCd,jdbcType=INTEGER}, 
      #{expiredDate,jdbcType=DATE}, #{enable,jdbcType=INTEGER}, #{usrMob,jdbcType=VARCHAR}, 
      #{usrEmail,jdbcType=VARCHAR}, #{admin,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, #{loginTimes,jdbcType=INTEGER}, 
      #{initPwd,jdbcType=VARCHAR}, #{lockStatus,jdbcType=INTEGER}, #{lastLockTime,jdbcType=TIMESTAMP}, 
      #{openId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.study.yfz.dao.mybatis.domain.OperationIdentifyUser" useGeneratedKeys="true" keyProperty="id" >
    insert into operation_identify_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="usrCd != null" >
        usr_cd,
      </if>
      <if test="usrNm != null" >
        usr_nm,
      </if>
      <if test="usrPwd != null" >
        usr_pwd,
      </if>
      <if test="usrSex != null" >
        usr_sex,
      </if>
      <if test="brhCd != null" >
        brh_cd,
      </if>
      <if test="deptCd != null" >
        dept_cd,
      </if>
      <if test="expiredDate != null" >
        expired_date,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="usrMob != null" >
        usr_mob,
      </if>
      <if test="usrEmail != null" >
        usr_email,
      </if>
      <if test="admin != null" >
        admin,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="loginTimes != null" >
        login_times,
      </if>
      <if test="initPwd != null" >
        init_pwd,
      </if>
      <if test="lockStatus != null" >
        lock_status,
      </if>
      <if test="lastLockTime != null" >
        last_lock_time,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="usrCd != null" >
        #{usrCd,jdbcType=VARCHAR},
      </if>
      <if test="usrNm != null" >
        #{usrNm,jdbcType=VARCHAR},
      </if>
      <if test="usrPwd != null" >
        #{usrPwd,jdbcType=VARCHAR},
      </if>
      <if test="usrSex != null" >
        #{usrSex,jdbcType=INTEGER},
      </if>
      <if test="brhCd != null" >
        #{brhCd,jdbcType=INTEGER},
      </if>
      <if test="deptCd != null" >
        #{deptCd,jdbcType=INTEGER},
      </if>
      <if test="expiredDate != null" >
        #{expiredDate,jdbcType=DATE},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="usrMob != null" >
        #{usrMob,jdbcType=VARCHAR},
      </if>
      <if test="usrEmail != null" >
        #{usrEmail,jdbcType=VARCHAR},
      </if>
      <if test="admin != null" >
        #{admin,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTimes != null" >
        #{loginTimes,jdbcType=INTEGER},
      </if>
      <if test="initPwd != null" >
        #{initPwd,jdbcType=VARCHAR},
      </if>
      <if test="lockStatus != null" >
        #{lockStatus,jdbcType=INTEGER},
      </if>
      <if test="lastLockTime != null" >
        #{lastLockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study.yfz.dao.mybatis.domain.OperationIdentifyUserExample" resultType="java.lang.Integer" >
    select count(*) from operation_identify_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update operation_identify_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.usrCd != null" >
        usr_cd = #{record.usrCd,jdbcType=VARCHAR},
      </if>
      <if test="record.usrNm != null" >
        usr_nm = #{record.usrNm,jdbcType=VARCHAR},
      </if>
      <if test="record.usrPwd != null" >
        usr_pwd = #{record.usrPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.usrSex != null" >
        usr_sex = #{record.usrSex,jdbcType=INTEGER},
      </if>
      <if test="record.brhCd != null" >
        brh_cd = #{record.brhCd,jdbcType=INTEGER},
      </if>
      <if test="record.deptCd != null" >
        dept_cd = #{record.deptCd,jdbcType=INTEGER},
      </if>
      <if test="record.expiredDate != null" >
        expired_date = #{record.expiredDate,jdbcType=DATE},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=INTEGER},
      </if>
      <if test="record.usrMob != null" >
        usr_mob = #{record.usrMob,jdbcType=VARCHAR},
      </if>
      <if test="record.usrEmail != null" >
        usr_email = #{record.usrEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.admin != null" >
        admin = #{record.admin,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.regTime != null" >
        reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTimes != null" >
        login_times = #{record.loginTimes,jdbcType=INTEGER},
      </if>
      <if test="record.initPwd != null" >
        init_pwd = #{record.initPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.lockStatus != null" >
        lock_status = #{record.lockStatus,jdbcType=INTEGER},
      </if>
      <if test="record.lastLockTime != null" >
        last_lock_time = #{record.lastLockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update operation_identify_user
    set id = #{record.id,jdbcType=INTEGER},
      usr_cd = #{record.usrCd,jdbcType=VARCHAR},
      usr_nm = #{record.usrNm,jdbcType=VARCHAR},
      usr_pwd = #{record.usrPwd,jdbcType=VARCHAR},
      usr_sex = #{record.usrSex,jdbcType=INTEGER},
      brh_cd = #{record.brhCd,jdbcType=INTEGER},
      dept_cd = #{record.deptCd,jdbcType=INTEGER},
      expired_date = #{record.expiredDate,jdbcType=DATE},
      enable = #{record.enable,jdbcType=INTEGER},
      usr_mob = #{record.usrMob,jdbcType=VARCHAR},
      usr_email = #{record.usrEmail,jdbcType=VARCHAR},
      admin = #{record.admin,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      login_times = #{record.loginTimes,jdbcType=INTEGER},
      init_pwd = #{record.initPwd,jdbcType=VARCHAR},
      lock_status = #{record.lockStatus,jdbcType=INTEGER},
      last_lock_time = #{record.lastLockTime,jdbcType=TIMESTAMP},
      open_id = #{record.openId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.yfz.dao.mybatis.domain.OperationIdentifyUser" >
    update operation_identify_user
    <set >
      <if test="usrCd != null" >
        usr_cd = #{usrCd,jdbcType=VARCHAR},
      </if>
      <if test="usrNm != null" >
        usr_nm = #{usrNm,jdbcType=VARCHAR},
      </if>
      <if test="usrPwd != null" >
        usr_pwd = #{usrPwd,jdbcType=VARCHAR},
      </if>
      <if test="usrSex != null" >
        usr_sex = #{usrSex,jdbcType=INTEGER},
      </if>
      <if test="brhCd != null" >
        brh_cd = #{brhCd,jdbcType=INTEGER},
      </if>
      <if test="deptCd != null" >
        dept_cd = #{deptCd,jdbcType=INTEGER},
      </if>
      <if test="expiredDate != null" >
        expired_date = #{expiredDate,jdbcType=DATE},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="usrMob != null" >
        usr_mob = #{usrMob,jdbcType=VARCHAR},
      </if>
      <if test="usrEmail != null" >
        usr_email = #{usrEmail,jdbcType=VARCHAR},
      </if>
      <if test="admin != null" >
        admin = #{admin,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTimes != null" >
        login_times = #{loginTimes,jdbcType=INTEGER},
      </if>
      <if test="initPwd != null" >
        init_pwd = #{initPwd,jdbcType=VARCHAR},
      </if>
      <if test="lockStatus != null" >
        lock_status = #{lockStatus,jdbcType=INTEGER},
      </if>
      <if test="lastLockTime != null" >
        last_lock_time = #{lastLockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.yfz.dao.mybatis.domain.OperationIdentifyUser" >
    update operation_identify_user
    set usr_cd = #{usrCd,jdbcType=VARCHAR},
      usr_nm = #{usrNm,jdbcType=VARCHAR},
      usr_pwd = #{usrPwd,jdbcType=VARCHAR},
      usr_sex = #{usrSex,jdbcType=INTEGER},
      brh_cd = #{brhCd,jdbcType=INTEGER},
      dept_cd = #{deptCd,jdbcType=INTEGER},
      expired_date = #{expiredDate,jdbcType=DATE},
      enable = #{enable,jdbcType=INTEGER},
      usr_mob = #{usrMob,jdbcType=VARCHAR},
      usr_email = #{usrEmail,jdbcType=VARCHAR},
      admin = #{admin,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      login_times = #{loginTimes,jdbcType=INTEGER},
      init_pwd = #{initPwd,jdbcType=VARCHAR},
      lock_status = #{lockStatus,jdbcType=INTEGER},
      last_lock_time = #{lastLockTime,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>